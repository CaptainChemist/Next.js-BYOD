// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator pothos {
  provider = "prisma-pothos-types"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  image         String?
  createdAt     DateTime  @default(now())
  votes         Vote[]
  emailVerified DateTime?
  accounts      Account[]
  sessions      Session[]
}

model Poll {
  id        String    @id @default(cuid())
  text      String
  createdAt DateTime  @default(now())
  options Option[]
}

model Option {
  id          String   @id @default(cuid())
  answer      String
  createdAt   DateTime @default(now())
  poll    Poll @relation(fields: [pollId], references: [id])
  pollId  String
  votes       Vote[]
}

model Vote {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  option   Option @relation(fields: [optionId], references: [id])
  optionId String
}